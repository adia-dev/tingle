// Define an enum
enum Color {
    Red,
    Green,
    Blue,
}

// Function with named and default parameters
fn greet(name: string, greeting: string = "Hello") {
    println("{greeting}, {name}!");
}

// Named parameter and default parameter usage
greet(name: "Alice"); // Prints: "Hello, Alice!"
greet(greeting: "Hi", name: "Bob"); // Prints: "Hi, Bob!"

// Enum shortened calls
let color = Color.Red;

// Pipe operator (similar to Elixir)
let result = color |> {
    match it {
        Color.Red => "It's red!",
        Color.Green => "It's green!",
        Color.Blue => "It's blue!",
    }
};

println(result); // Prints: "It's red!"

/*

This is a multi line comment eheh

*/

println!(true && false || true ++ false || 1..20)
